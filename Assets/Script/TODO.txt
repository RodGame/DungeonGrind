TODO: 

==> IMPLEMENT THIS WEEK

HELP

o Building Mechanic
	-> Object should stick to ground
	-> Turn to red/Prevent positioning on collision
	-> Add mesh collider to builded
o Dungeon
    -> Add Safe Room
    -> Corridor stop at first room encountered(If not thisroom.int and not 0)
    -> Add random spawn of prefab
o Save/Load (http://whydoidoit.com/unityserializer/getting-started-guide/)
o Monster
	-> Healthbar in screen when turning around
o Crafting level doen't give any stats but put it in log	

==> Refactor
o Turn Inventory in a static class. Probably GameManager too.
o CraftSystem/BuildSystem
	-> Should be an entity above that contain functino for both
	-> Test for ressource/building/item should be centralized and be used the same way. Variable should be renamed accordingly.
o Quest/Reward system should be used EVERYWHERE
	-> Reparing cart (misc) 

==> BUG
- High Priority :  
o Weapon constantly rotate
o Spawning in wall in dungeon

==> MECHANICS TO ADD

o Building system
	-> Control over building position(Follow ground)
	-> Detect collision

o Stamina/Food system
o Different tree/rock



==========================================================================================================================




==> ASSETS POSSIBLE
o BaseMale
o Gorilla

==> BUILDING TO ADD
o Walls
o Cloture
o Farm
o Smelting for minerals
o Fire
o Tent
o Chest

==> ITEM TO ADD
o Bow
o Torch
o Potion

==> SPELL TO ADD

Menu
http://www.jakel168.com/2010/09/how-to-make-mini-map-for-your-scene-in.html
http://forum.unity3d.com/threads/72656-A-subwindow-for-the-second-camera-view



Implement Deletage for Interact()
using System;
public class InteractableObject : MonoBehaviour
{
        public Action OnInteract;
        public void Interact ()
        {
                if(OnInteract != null) OnInteract();
        }
}
 
// your other script:
public class InteractableTree : MonoBehaviour
{
        void Awake ()
        {
                var interactableObject = GetComponent<InteractableObject>();
                interactableObject.OnInteract += InteractWithTree;
        }
        void InteractWithTree ()
        {
                Debug.Log("Insert tree-specific interaction here.");
        }
}





